-- –°–∫—Ä–∏–ø—Ç –æ—á–∏—Å—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Å –ø–æ–¥—Å—á–µ—Ç–æ–º —Å—Ç—Ä–æ–∫ –¥–æ/–ø–æ—Å–ª–µ –æ–ø–µ—Ä–∞—Ü–∏–π
-- –ó–∞–ø—É—Å–∫: psql -h host -d database -U user -f data_cleaning.sql

\echo '=========================================='
\echo '–ù–ê–ß–ê–õ–û –û–ß–ò–°–¢–ö–ò –î–ê–ù–ù–´–•'
\echo '=========================================='

-- –í–∫–ª—é—á–µ–Ω–∏–µ –≤—ã–≤–æ–¥–∞ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
\timing on

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ —Å—Ç—Ä–æ–∫ –∏ –≤—ã–≤–æ–¥–∞ –æ—Ç—á–µ—Ç–∞
CREATE OR REPLACE FUNCTION log_cleaning_operation(
    operation_name TEXT,
    table_name TEXT,
    rows_before BIGINT,
    rows_after BIGINT,
    justification TEXT
) RETURNS void AS $$
BEGIN
    RAISE NOTICE '';
    RAISE NOTICE 'üìä –û–ü–ï–†–ê–¶–ò–Ø: %', operation_name;
    RAISE NOTICE '   –¢–∞–±–ª–∏—Ü–∞: %', table_name;
    RAISE NOTICE '   –î–æ: % —Å—Ç—Ä–æ–∫', rows_before;
    RAISE NOTICE '   –ü–æ—Å–ª–µ: % —Å—Ç—Ä–æ–∫', rows_after;
    RAISE NOTICE '   –£–¥–∞–ª–µ–Ω–æ: % —Å—Ç—Ä–æ–∫', (rows_before - rows_after);
    RAISE NOTICE '   ÔøΩÔøΩ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ: %', justification;
    RAISE NOTICE '----------------------------------------';
END;
$$ LANGUAGE plpgsql;

-- –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è –æ—Ç—á–µ—Ç–∞ –æ—á–∏—Å—Ç–∫–∏
DROP TABLE IF EXISTS data_cleaning_log;
CREATE TABLE data_cleaning_log (
    id SERIAL PRIMARY KEY,
    operation_name TEXT,
    table_name TEXT,
    rows_before BIGINT,
    rows_after BIGINT,
    rows_affected BIGINT,
    justification TEXT,
    executed_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

\echo ''
\echo '1. –£–î–ê–õ–ï–ù–ò–ï –¢–ï–°–¢–û–í–´–• –î–ê–ù–ù–´–•'
\echo '------------------------------------------'

-- –ü–æ–¥—Å—á–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
DO $$
DECLARE
    customers_before BIGINT;
    customers_after BIGINT;
BEGIN
    -- –ü–æ–¥—Å—á–µ—Ç –¥–æ —É–¥–∞–ª–µ–Ω–∏—è
    SELECT COUNT(*) INTO customers_before 
    FROM customers 
    WHERE email LIKE '%test%' 
       OR email LIKE '%example%' 
       OR name LIKE '%Test%'
       OR name LIKE '%test%';
    
    -- –£–¥–∞–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
    DELETE FROM customers 
    WHERE email LIKE '%test%' 
       OR email LIKE '%example%' 
       OR name LIKE '%Test%'
       OR name LIKE '%test%';
    
    -- –ü–æ–¥—Å—á–µ—Ç –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è  
    SELECT COUNT(*) INTO customers_after 
    FROM customers 
    WHERE email LIKE '%test%' 
       OR email LIKE '%example%' 
       OR name LIKE '%Test%'
       OR name LIKE '%test%';
    
    -- –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    PERFORM log_cleaning_operation(
        '–£–¥–∞–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤',
        'customers',
        customers_before,
        customers_after,
        '–¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∏—Å–∫–∞–∂–∞—é—Ç —Ä–µ–∞–ª—å–Ω—É—é –∞–Ω–∞–ª–∏—Ç–∏–∫—É –∏ –º–µ—Ç—Ä–∏–∫–∏ –±–∏–∑–Ω–µ—Å–∞'
    );
    
    -- –ó–∞–ø–∏—Å—å –≤ –ª–æ–≥
    INSERT INTO data_cleaning_log 
    (operation_name, table_name, rows_before, rows_after, rows_affected, justification)
    VALUES (
        '–£–¥–∞–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤',
        'customers',
        customers_before,
        customers_after,
        customers_before - customers_after,
        '–¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∏—Å–∫–∞–∂–∞—é—Ç —Ä–µ–∞–ª—å–Ω—É—é –∞–Ω–∞–ª–∏—Ç–∏–∫—É –∏ –º–µ—Ç—Ä–∏–∫–∏ –±–∏–∑–Ω–µ—Å–∞'
    );
END $$;

\echo ''
\echo '2. –û–ß–ò–°–¢–ö–ê –î–£–ë–õ–ò–ö–ê–¢–û–í –ö–õ–ò–ï–ù–¢–û–í'
\echo '------------------------------------------'

DO $$
DECLARE
    customers_before BIGINT;
    customers_after BIGINT;
BEGIN
    -- –ü–æ–¥—Å—á–µ—Ç –¥–æ –æ—á–∏—Å—Ç–∫–∏
    SELECT COUNT(*) INTO customers_before FROM customers;
    
    -- –£–¥–∞–ª–µ–Ω–∏–µ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ –ø–æ email (–æ—Å—Ç–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º ID)
    DELETE FROM customers 
    WHERE id NOT IN (
        SELECT MIN(id) 
        FROM customers 
        WHERE email IS NOT NULL AND email != ''
        GROUP BY email
    ) AND email IS NOT NULL AND email != '';
    
    -- –ü–æ–¥—Å—á–µ—Ç –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏
    SELECT COUNT(*) INTO customers_after FROM customers;
    
    -- –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    PERFORM log_cleaning_operation(
        '–£–¥–∞–ª–µ–Ω–∏–µ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ –∫–ª–∏–µ–Ω—Ç–æ–≤',
        'customers',
        customers_before,
        customers_after,
        '–î—É–±–ª–∏–∫–∞—Ç—ã –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏—Å–∫–∞–∂–∞—é—Ç –∞–Ω–∞–ª–∏—Ç–∏–∫—É. –û—Å—Ç–∞–≤–ª–µ–Ω—ã –∑–∞–ø–∏—Å–∏ —Å –Ω–∞–∏–º–µ–Ω—å—à–∏–º ID'
    );
    
    -- –ó–∞–ø–∏—Å—å –≤ –ª–æ–≥
    INSERT INTO data_cleaning_log 
    (operation_name, table_name, rows_before, rows_after, rows_affected, justification)
    VALUES (
        '–£–¥–∞–ª–µ–Ω–∏–µ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ –∫–ª–∏–µ–Ω—Ç–æ–≤',
        'customers',
        customers_before,
        customers_after,
        customers_before - customers_after,
        '–î—É–±–ª–∏–∫–∞—Ç—ã –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏—Å–∫–∞–∂–∞—é—Ç –∞–Ω–∞–ª–∏—Ç–∏–∫—É. –û—Å—Ç–∞–≤–ª–µ–Ω—ã –∑–∞–ø–∏—Å–∏ —Å –Ω–∞–∏–º–µ–Ω—å—à–∏–º ID'
    );
END $$;

\echo ''
\echo '3. –û–ß–ò–°ÔøΩÔøΩ–ö–ê –ù–ï–ö–û–†–†–ï–ö–¢–ù–´–• –ó–ê–ö–ê–ó–û–í'
\echo '------------------------------------------'

DO $$
DECLARE
    orders_before BIGINT;
    orders_after BIGINT;
BEGIN
    -- –ü–æ–¥—Å—á–µ—Ç –¥–æ –æ—á–∏—Å—Ç–∫–∏
    SELECT COUNT(*) INTO orders_before FROM orders;
    
    -- –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤ –±–µ–∑ —Ç–æ–≤–∞—Ä–æ–≤
    DELETE FROM orders 
    WHERE id NOT IN (
        SELECT DISTINCT order_id 
        FROM order_items 
        WHERE order_id IS NOT NULL
    );
    
    -- –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤ —Å –±—É–¥—É—â–∏–º–∏ –¥–∞—Ç–∞–º–∏
    DELETE FROM orders 
    WHERE order_date > CURRENT_DATE;
    
    -- –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤ —Å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏ –∫–ª–∏–µ–Ω—Ç–∞–º–∏
    DELETE FROM orders 
    WHERE customer_id NOT IN (
        SELECT id FROM customers WHERE id IS NOT NULL
    );
    
    -- –ü–æ–¥—Å—á–µ—Ç –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏
    SELECT COUNT(*) INTO orders_after FROM orders;
    
    -- –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    PERFORM log_cleaning_operation(
        '–û—á–∏—Å—Ç–∫–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤',
        'orders',
        orders_before,
        orders_after,
        '–ó–∞–∫–∞–∑—ã –±–µ–∑ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–µ –∏–º–µ—é—Ç –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–π —Ü–µ–Ω–Ω–æ—Å—Ç–∏. –ë—É–¥—É—â–∏–µ –¥–∞—Ç—ã –∏ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–ª–∏–µ–Ω—Ç—ã - –æ—à–∏–±–∫–∏ –¥–∞–Ω–Ω—ã—Ö'
    );
    
    -- –ó–∞–ø–∏—Å—å –≤ –ª–æ–≥
    INSERT INTO data_cleaning_log 
    (operation_name, table_name, rows_before, rows_after, rows_affected, justification)
    VALUES (
        '–û—á–∏—Å—Ç–∫–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤',
        'orders',
        orders_before,
        orders_after,
        orders_before - orders_after,
        '–ó–∞–∫–∞–∑—ã –±–µ–∑ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–µ –∏–º–µ—é—Ç –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–π —Ü–µ–Ω–Ω–æ—Å—Ç–∏. –ë—É–¥—É—â–∏–µ –¥–∞—Ç—ã –∏ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–ª–∏–µ–Ω—Ç—ã - –æ—à–∏–±–∫–∏ –¥–∞–Ω–Ω—ã—Ö'
    );
END $$;

\echo ''
\echo '4. –û–ß–ò–°–¢–ö–ê –ü–û–ó–ò–¶–ò–ô –ó–ê–ö–ê–ó–û–í'
\echo '------------------------------------------'

DO $$
DECLARE
    items_before BIGINT;
    items_after BIGINT;
BEGIN
    -- –ü–æ–¥—Å—á–µ—Ç –¥–æ –æ—á–∏—Å—Ç–∫–∏
    SELECT COUNT(*) INTO items_before FROM order_items;
    
    -- –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–π —Å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    DELETE FROM order_items 
    WHERE quantity <= 0 
       OR unit_price < 0
       OR quantity IS NULL 
       OR unit_price IS NULL
       OR product_id NOT IN (SELECT id FROM products WHERE id IS NOT NULL);
    
    -- –ü–æ–¥—Å—á–µ—Ç –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏
    SELECT COUNT(*) INTO items_after FROM order_items;
    
    -- –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    PERFORM log_cleaning_operation(
        '–û—á–∏—Å—Ç–∫–∞ –ø–æ–∑–∏—Ü–∏–π –∑–∞–∫–∞–∑–æ–≤',
        'order_items',
        items_before,
        items_after,
        '–ü–æ–∑–∏—Ü–∏–∏ —Å –Ω—É–ª–µ–≤—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –∏–ª–∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º–∏ —Ü–µ–Ω–∞–º–∏ –∏—Å–∫–∞–∂–∞—é—Ç —Ä–∞—Å—á–µ—Ç –≤—ã—Ä—É—á–∫–∏'
    );
    
    -- –ó–∞–ø–∏—Å—å –≤ –ª–æ–≥
    INSERT INTO data_cleaning_log 
    (operation_name, table_name, rows_before, rows_after, rows_affected, justification)
    VALUES (
        '–û—á–∏—Å—Ç–∫–∞ –ø–æ–∑–∏—Ü–∏–π –∑–∞–∫–∞–∑–æ–≤',
        'order_items',
        items_before,
        items_after,
        items_before - items_after,
        '–ü–æ–∑–∏—Ü–∏–∏ —Å –Ω—É–ª–µ–≤—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –∏–ª–∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º–∏ —Ü–µ–Ω–∞–º–∏ –∏—Å–∫–∞–∂–∞—é—Ç —Ä–∞—Å—á–µ—Ç –≤—ã—Ä—É—á–∫–∏'
    );
END $$;

\echo ''
\echo '5. –ê–†–•–ò–í–ò–†–û–í–ê–ù–ò–ï –ù–ï–ê–ö–¢–ò–í–ù–´–• –¢–û–í–ê–†–û–í'
\echo '------------------------------------------'

DO $$
DECLARE
    products_before BIGINT;
    products_after BIGINT;
BEGIN
    -- –ü–æ–¥—Å—á–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –¥–æ –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏—è
    SELECT COUNT(*) INTO products_before FROM products WHERE is_active = true;
    
    -- –î–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –±–µ–∑ –ø—Ä–æ–¥–∞–∂ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 12 –º–µ—Å—è—Ü–µ–≤
    UPDATE products 
    SET is_active = false, 
        updated_at = CURRENT_TIMESTAMP
    WHERE is_active = true 
      AND id NOT IN (
          SELECT DISTINCT oi.product_id 
          FROM order_items oi 
          JOIN orders o ON oi.order_id = o.id 
          WHERE o.order_date >= CURRENT_DATE - INTERVAL '12 months'
            AND oi.product_id IS NOT NULL
      )
      AND created_at < CURRENT_DATE - INTERVAL '12 months';
    
    -- –ü–æ–¥—Å—á–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ—Å–ª–µ –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏—è
    SELECT COUNT(*) INTO products_after FROM products WHERE is_active = true;
    
    -- –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    PERFORM log_cleaning_operation(
        '–ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤',
        'products',
        products_before,
        products_after,
        '–ù–µ–∞–∫—Ç–∏–≤–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –∑–∞–≥—Ä–æ–º–æ–∂–¥–∞—é—Ç –∫–∞—Ç–∞–ª–æ–≥ –∏ —É—Å–ª–æ–∂–Ω—è—é—Ç –∞–Ω–∞–ª–∏—Ç–∏–∫—É'
    );
    
    -- –ó–∞–ø–∏—Å—å –≤ –ª–æ–≥
    INSERT INTO data_cleaning_log 
    (operation_name, table_name, rows_before, rows_after, rows_affected, justification)
    VALUES (
        '–ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤',
        'products',
        products_before,
        products_after,
        products_before - products_after,
        '–ù–µ–∞ÔøΩÔøΩ—Ç–∏–≤–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –∑–∞–≥—Ä–æ–º–æ–∂–¥–∞—é—Ç –∫–∞—Ç–∞–ª–æ–≥ –∏ —É—Å–ª–æ–∂–Ω—è—é—Ç –∞–Ω–∞–ª–∏—Ç–∏–∫—É'
    );
END $$;

\echo ''
\echo '6. –û–ë–ù–û–í–õ–ï–ù–ò–ï –°–õ–£–ñ–ï–ë–ù–´–• –ü–û–õ–ï–ô'
\echo '------------------------------------------'

-- –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ updated_at –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π
UPDATE customers 
SET updated_at = CURRENT_TIMESTAMP 
WHERE updated_at < created_at OR updated_at IS NULL;

UPDATE products 
SET updated_at = CURRENT_TIMESTAMP 
WHERE updated_at < created_at OR updated_at IS NULL;

UPDATE orders 
SET updated_at = CURRENT_TIMESTAMP 
WHERE updated_at < created_at OR updated_at IS NULL;

\echo '‚úÖ –°–ª—É–∂–µ–±–Ω—ã–µ –ø–æ–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω—ã'

\echo ''
\echo '7. –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢'
\echo '------------------------------------------'

-- –í—ã–≤–æ–¥ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞
DO $$
DECLARE
    rec RECORD;
    total_affected BIGINT := 0;
BEGIN
    RAISE NOTICE '';
    RAISE NOTICE 'üìä –°–í–û–î–ö–ê –û–ü–ï–†–ê–¶–ò–ô –û–ß–ò–°–¢–ö–ò:';
    RAISE NOTICE '==========================================';
    
    FOR rec IN 
        SELECT operation_name, table_name, rows_before, rows_after, rows_affected, justification
        FROM data_cleaning_log 
        ORDER BY id 
    LOOP
        RAISE NOTICE '‚Ä¢ %: % —Å—Ç—Ä–æÔøΩÔøΩ —É–¥–∞–ª–µ–Ω–æ –∏–∑ %', 
            rec.operation_name, rec.rows_affected, rec.table_name;
        total_affected := total_affected + rec.rows_affected;
    END LOOP;
    
    RAISE NOTICE '';
    RAISE NOTICE 'üìà –í–°–ï–ì–û –û–ë–†–ê–ë–û–¢–ê–ù–û: % —Å—Ç—Ä–æ–∫', total_affected;
    RAISE NOTICE '';
    
    -- –§–∏–Ω–∞–ª—å–Ω—ã–µ —Å—á–µ—Ç—á–∏–∫–∏ —Ç–∞–±–ª–∏—Ü
    RAISE NOTICE 'üìã –§–ò–ù–ê–õ–¨–ù–û–ï –°–û–°–¢–û–Ø–ù–ò–ï –¢–ê–ë–õ–ò–¶:';
    RAISE NOTICE '==========================================';
    RAISE NOTICE '‚Ä¢ customers: % —Å—Ç—Ä–æ–∫', (SELECT COUNT(*) FROM customers);
    RAISE NOTICE '‚Ä¢ orders: % —Å—Ç—Ä–æ–∫', (SELECT COUNT(*) FROM orders);
    RAISE NOTICE '‚Ä¢ order_items: % —Å—Ç—Ä–æ–∫', (SELECT COUNT(*) FROM order_items);
    RAISE NOTICE '‚Ä¢ products (–∞–∫—Ç–∏–≤–Ω—ã–µ): % —Å—Ç—Ä–æ–∫', (SELECT COUNT(*) FROM products WHERE is_active = true);
    RAISE NOTICE '‚Ä¢ products (–≤—Å–µ–≥–æ): % —Å—Ç—Ä–æ–∫', (SELECT COUNT(*) FROM products);
END $$;

-- –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –¥–∞–Ω–Ω—ã—Ö
CREATE OR REPLACE VIEW data_quality_metrics AS
SELECT 
    'customers' as table_name,
    COUNT(*) as total_rows,
    COUNT(CASE WHEN email IS NULL OR email = '' THEN 1 END) as missing_email,
    COUNT(CASE WHEN name IS NULL OR name = '' THEN 1 END) as missing_name,
    COUNT(*) - COUNT(DISTINCT email) as duplicate_emails
FROM customers

UNION ALL

SELECT 
    'orders' as table_name,
    COUNT(*) as total_rows,
    COUNT(CASE WHEN customer_id IS NULL THEN 1 END) as missing_customer_id,
    COUNT(CASE WHEN order_date IS NULL THEN 1 END) as missing_order_date,
    0 as duplicate_emails
FROM orders

UNION ALL

SELECT 
    'order_items' as table_name,
    COUNT(*) as total_rows,
    COUNT(CASE WHEN quantity IS NULL OR quantity <= 0 THEN 1 END) as invalid_quantity,
    COUNT(CASE WHEN unit_price IS NULL OR unit_price < 0 THEN 1 END) as invalid_price,
    0 as duplicate_emails
FROM order_items

UNION ALL

SELECT 
    'products' as table_name,
    COUNT(*) as total_rows,
    COUNT(CASE WHEN name IS NULL OR name = '' THEN 1 END) as missing_name,
    COUNT(CASE WHEN selling_price IS NULL OR selling_price <= 0 THEN 1 END) as invalid_price,
    0 as duplicate_emails
FROM products;

\echo ''
\echo 'üìä –°–æ–∑–¥–∞–Ω–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ data_quality_metrics –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞'

-- –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –≤—ã–≤–æ–¥–∞ –≤—Ä–µ–º–µ–Ω–∏
\timing off

\echo ''
\echo '=========================================='
\echo '‚úÖ –û–ß–ò–°–¢–ö–ê –î–ê–ù–ù–´–• –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û'
\echo '=========================================='
\echo ''
\echo '–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:'
\echo 'SELECT * FROM data_cleaning_log ORDER BY executed_at;'
\echo ''
\echo '–î–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –¥–∞–Ω–Ω—ã—Ö:'
\echo 'SELECT * FROM data_quality_metrics;'
